plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'de.mannodermaus.android-junit5'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.twitterminiapp"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "OAUTH_HEADER_STRING", oauth)
        buildConfigField("String", "BEARER_TOKEN", bearerToken)
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = false
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {

    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.legacy:legacy-support-v4:$legacy_support_v4_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    testImplementation "junit:junit:$junit4_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    // gson
    implementation "com.google.code.gson:gson:$gson_version"
    // JUnit5
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    // Mockito
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_kotlin_version"
    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    // MockWebServer
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver_version"
    // kotlin test
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_test_junit_version"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Annotation processor
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    // glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    // okhttp
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"
    // SwipeRefreshLayout
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefreshlayout_version"
    // paging
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    // paging
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    implementation(project(":common_api"))
}
